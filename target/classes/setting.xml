<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                            http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/util
http://www.springframework.org/schema/util/spring-util-2.0.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context-4.3.xsd
">

    <!-- 네임스페이스를 쓰려고 넣어줬는데 안되서 뺌  Util은 해결했는데 아마 P는 사이트가 없는걸로 봐서 사라진 기능이 아닐까 싶음-->
    <!--    xmlns:p="http://www.springframework.org/schema/p"-->

<!--   spring.di.ui패키지에 있는 InlineExamConsole의 객체를 @Component 어노테이션을 통해 객체 생성 -->
    <context:component-scan base-package="spring.di.ui, spring.di.entity" />

<!--    component-scan이 있으면 이 설정이 필요없어서 주석처리-->
<!--    @Autowired를 스프링이 찾으라고 지시하도록 작성-->
<!--    <context:annotation-config />-->

    <!--    헷갈리지 않도록 반드시 패키지 명도 같이 써줘야함-->
    <!--    java에서의 Exam exam = new NewlecExam(); 이와 같은 코드와 아래의 의미가 같다 -->
    <!--    <bean id="exam" class="spring.di.entity.NewlecExam" />-->

<!--    @Autowired의 동작원리를 알아보기 위해서 id값으로 참조하는지 보리고 일부러 id륿 변경해봄 -->
<!--    <bean id="exam" class="spring.di.entity.NewlecExam">-->
<!--    <bean id="exam1" class="spring.di.entity.NewlecExam">-->
<!--    <bean class="spring.di.entity.NewlecExam">-->
        <!--        <property name="kor" value="10" />-->
        <!--        <property name="eng" value="10" />-->
        <!--        &lt;!&ndash;   property 설정의 두가지 방법을 다 표현&ndash;&gt;-->
        <!--        <property name="math">-->
        <!--            <value>10</value>-->
        <!--        </property>-->
        <!--        <property name="com">-->
        <!--            <value>10</value>-->
        <!--        </property>-->

        <!--        <constructor-arg index="0" value="10" />-->
        <!--        <constructor-arg index="1" value="20" />-->
        <!--        <constructor-arg index="2" value="30" />-->
        <!--        <constructor-arg index="3" value="40" />-->
<!--        <constructor-arg name="kor" value="10"/>-->
<!--        <constructor-arg name="eng" value="20"/>-->
<!--        <constructor-arg name="math" value="30"/>-->
<!--        <constructor-arg name="com" value="40"/>-->
<!--    </bean>-->

    <!--    @Autowired를 사용함에 있어서 똑같은 객체가 둘이 있다면 어떻게 될지를 알아보려고 만들어봄-->
    <!--    결과 : .springframework.beans.factory.NoUniqueBeanDefinitionException: No qualifying bean of type  'spring.di.entity.Exam'  available: expected single matching bean but found 2: spring.di.entity.NewlecExam#0,spring.di.entity.NewlecExam#1 에러-->
    <!--    즉 해당하는 객체를 2개 발견했는데 난 모르겠다는 거임-->
<!--    <bean class="spring.di.entity.NewlecExam">-->
<!--    <bean id="exam2" class="spring.di.entity.NewlecExam">-->
<!--        <constructor-arg name="kor" value="50"/>-->
<!--        <constructor-arg name="eng" value="60"/>-->
<!--        <constructor-arg name="math" value="70"/>-->
<!--        <constructor-arg name="com" value="80"/>-->
<!--    </bean>-->

    <!-- 네임스페이스를 활용하는 방법(namespace 설정을 못해서 포기!) => location을 지정해줘서 uitl은 사용했으나 p는 없어진게 아닐까 추측 -->
    <!--        <bean id="exam" class="spring.di.entity.NewlecExam" p:kor="50" p:eng="60" p:math="70" p:com="70" />-->

    <!--    ExamConsole console = new GridExamConsole();
            console.setExam(exam);          -->
    <!--    <bean id="console" class="spring.di.ui.GridExamConsole">-->


            <!--   @Component 어노테이션을 통한 객체 생성하기 위해 주석처리-->
<!--    <bean id="console" class="spring.di.ui.InlineExamConsole">-->
<!--        &lt;!&ndash;       Annotation(Autowired)을 통해 DI 할것이므로 주석 &ndash;&gt;-->
<!--&lt;!&ndash;        <property name="exam" ref="exam"/>&ndash;&gt;-->
<!--    </bean>-->


    <!--    bean을 통해 객체를 만들고 안에 list를 넣어줌 -->
    <!--    <bean id="exams" class="java.util.ArrayList">-->
    <!--        <constructor-arg>-->
    <!--            <list>-->
    <!--                <bean class="spring.di.entity.NewlecExam">-->
    <!--                    <constructor-arg name="kor" value="10"/>-->
    <!--                    <constructor-arg name="eng" value="20"/>-->
    <!--                    <constructor-arg name="math" value="30"/>-->
    <!--                    <constructor-arg name="com" value="40"/>-->
    <!--                </bean>-->
    <!--                &lt;!&ndash; 각각을 레퍼런스 DI 하기 위해서 &ndash;&gt;-->
    <!--                <ref bean="exam"/>-->
    <!--            </list>-->
    <!--        </constructor-arg>-->
    <!--    </bean>-->

    <!--        위와 같이 할 필요 없이 namespace : util을 활용해서 util자체가 객체를 만들 수 있음 -->
            <!--   @AUtowired의 동작원리에 있어서 id를 참조하는지 보기 위해서 위에서 exam을 변경해서 자꾸 바꿔줘야하거나 해서 귀찮음 주석-->
            <!--    결과적으로 밑에 ref의 bean이름만 똑같이 변경해주면 잘 작동 했음-->
<!--    <util:list id="exams" list-class="java.util.ArrayList">-->
<!--        <bean class="spring.di.entity.NewlecExam">-->
<!--            <constructor-arg name="kor" value="10"/>-->
<!--            <constructor-arg name="eng" value="20"/>-->
<!--            <constructor-arg name="math" value="30"/>-->
<!--            <constructor-arg name="com" value="40"/>-->
<!--        </bean>-->
<!--        &lt;!&ndash; 각각을 레퍼런스 DI까지 하기 위해서 &ndash;&gt;-->
<!--        <ref bean="exam"/>-->
<!--    </util:list>-->

</beans>